"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/upload";
exports.ids = ["pages/api/upload"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

module.exports = require("sharp");

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("formidable");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fupload.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fupload.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/upload.js */ \"(api)/./pages/api/upload.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/upload\",\n        pathname: \"/api/upload\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVwbG9hZCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGdXBsb2FkLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2tEO0FBQ2xEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29zbWljLWxlbnMvP2Y4MWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS91cGxvYWQuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS91cGxvYWRcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS91cGxvYWRcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fupload.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/upload.js":
/*!*****************************!*\
  !*** ./pages/api/upload.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sharp */ \"sharp\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sharp__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([formidable__WEBPACK_IMPORTED_MODULE_0__]);\nformidable__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method Not Allowed\"\n        });\n    }\n    // Ensure the temporary upload directory exists\n    const tmpUploadDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"tmp\");\n    await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.mkdir(tmpUploadDir, {\n        recursive: true\n    });\n    const form = (0,formidable__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        uploadDir: tmpUploadDir,\n        keepExtensions: true,\n        maxFileSize: 200 * 1024 * 1024\n    });\n    let imageId; // Declare imageId outside try block\n    let newImageEntry; // Declare newImageEntry outside try block\n    let imagesFilePath; // Declare imagesFilePath outside try block\n    try {\n        const [fields, files] = await form.parse(req);\n        const imageFile = files.image?.[0];\n        const title = fields.title?.[0];\n        const description = fields.description?.[0];\n        if (!imageFile || !title) {\n            return res.status(400).json({\n                message: \"Image file and title are required.\"\n            });\n        }\n        imageId = Date.now().toString(); // Assign value\n        const outputDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"public\", \"tiled-images\", imageId);\n        const tileSourcePath = `/tiled-images/${imageId}/${imageId}.dzi`;\n        // Ensure output directory exists\n        await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.mkdir(outputDir, {\n            recursive: true\n        });\n        // Process image to DZI tiles using sharp\n        const dziOutputPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(outputDir, imageId + \".dzi\");\n        console.log(\"Processing image to DZI:\", imageFile.filepath);\n        console.log(\"DZI output directory:\", outputDir);\n        console.log(\"DZI output file path:\", dziOutputPath);\n        // Verify output directory creation\n        const outputDirExists = await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.access(outputDir, (fs__WEBPACK_IMPORTED_MODULE_3___default().constants).F_OK).then(()=>true).catch(()=>false);\n        console.log(`Output directory ${outputDir} exists: ${outputDirExists}`);\n        try {\n            // --- Debugging sharp output ---\n            const testOutputPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(outputDir, \"test_output.jpg\");\n            console.log(\"Attempting to write a test JPG to:\", testOutputPath);\n            await sharp__WEBPACK_IMPORTED_MODULE_1___default()(imageFile.filepath).resize(500) // Resize to make it small and quick\n            .jpeg({\n                quality: 80\n            }).toFile(testOutputPath);\n            console.log(\"Successfully wrote test JPG.\");\n            await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.unlink(testOutputPath); // Clean up test file\n            console.log(\"Successfully deleted test JPG.\");\n            // --- End Debugging sharp output ---\n            console.log(\"Attempting DZI tiling with sharp...\");\n            const sharpOutputMetadata = await sharp__WEBPACK_IMPORTED_MODULE_1___default()(imageFile.filepath).tile({\n                size: 256,\n                layout: \"dz\",\n                id: imageId\n            }).toFile(path__WEBPACK_IMPORTED_MODULE_2___default().join(outputDir, imageId)); // Corrected: pass base path, sharp adds .dzi and _files\n            console.log(\"Sharp DZI tiling completed successfully. Output metadata:\", sharpOutputMetadata);\n        } catch (sharpError) {\n            console.error(\"Sharp processing failed:\", sharpError);\n            throw new Error(`Image tiling failed: ${sharpError.message}`); // Re-throw to be caught by main try/catch\n        }\n        // --- Debugging write permissions ---\n        const dummyFilePath = path__WEBPACK_IMPORTED_MODULE_2___default().join(outputDir, \"dummy.txt\");\n        try {\n            await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.writeFile(dummyFilePath, \"This is a test file.\", \"utf-8\");\n            console.log(`Successfully wrote dummy file to: ${dummyFilePath}`);\n            await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.unlink(dummyFilePath); // Clean up dummy file\n            console.log(`Successfully deleted dummy file: ${dummyFilePath}`);\n        } catch (dummyWriteError) {\n            console.error(`Failed to write dummy file to ${outputDir}:`, dummyWriteError);\n            throw new Error(`Permissions error: Cannot write to output directory. ${dummyWriteError.message}`);\n        }\n        // --- End Debugging write permissions ---\n        console.log(\"Checking if DZI file exists after sharp processing...\");\n        const fileExists = await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.access(dziOutputPath, (fs__WEBPACK_IMPORTED_MODULE_3___default().constants).F_OK).then(()=>true).catch(()=>false);\n        console.log(`DZI file ${dziOutputPath} exists: ${fileExists}`);\n        // Update data/images.js (for prototype)\n        newImageEntry = {\n            id: imageId,\n            title: title,\n            description: description || \"\",\n            tileSource: tileSourcePath\n        };\n        console.log(\"Defining imagesFilePath...\");\n        imagesFilePath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\", \"images.js\");\n        let currentContent = await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.readFile(imagesFilePath, \"utf-8\");\n        // Extract the array string (everything between [ and ])\n        const arrayStartMatch = currentContent.match(/export const spaceImages = \\[/);\n        const arrayEndIndex = currentContent.lastIndexOf(\"]\");\n        if (!arrayStartMatch || arrayEndIndex === -1) {\n            throw new Error(\"Could not parse spaceImages array in images.js\");\n        }\n        const arrayString = currentContent.substring(arrayStartMatch.index + arrayStartMatch[0].length - 1, arrayEndIndex + 1);\n        // Parse the array string into a JavaScript array\n        let currentImagesArray;\n        try {\n            currentImagesArray = eval(arrayString); // This is risky in production, but fine for prototype\n        } catch (e) {\n            throw new Error(`Failed to parse images.js array: ${e.message}. Please ensure data/images.js is valid JavaScript array syntax.`);\n        }\n        // Add the new entry\n        currentImagesArray.push(newImageEntry);\n        // Stringify the array back to a JavaScript array string\n        const updatedArrayString = JSON.stringify(currentImagesArray, null, 2).replace(/^[\\[]/, \"[\\n  \") // Add newline and indent after opening bracket\n        .replace(/[\\]]$/, \"\\n]\"); // Add newline before closing bracket\n        // Reconstruct the entire file content\n        const finalContent = `export const spaceImages = ${updatedArrayString};\\n`;\n        console.log(\"Attempting to write to:\", imagesFilePath);\n        console.log(\"Content to write:\", finalContent);\n        await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.writeFile(imagesFilePath, finalContent, \"utf-8\");\n        console.log(\"Successfully wrote to:\", imagesFilePath);\n        // Clean up temporary uploaded file\n        await fs__WEBPACK_IMPORTED_MODULE_3___default().promises.unlink(imageFile.filepath);\n        res.status(200).json({\n            message: \"Image uploaded and processed successfully!\",\n            imageId: imageId\n        });\n    } catch (error) {\n        console.error(\"Upload error in API:\", error); // Log the full error object\n        res.status(500).json({\n            message: \"Image upload and processing failed.\",\n            error: error.toString()\n        }); // Use error.toString() for response\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c0M7UUFDdEMsTUFBTUMsZUFBZSxDQUFDLDJCQUEyQixFQUFFSixtQkFBbUIsR0FBRyxDQUFDO1FBRTFFMUMsUUFBUUMsR0FBRyxDQUFDLDJCQUEyQmY7UUFDdkNjLFFBQVFDLEdBQUcsQ0FBQyxxQkFBcUI2QztRQUVqQyxNQUFNcEYsa0RBQVcsQ0FBQzhELFNBQVMsQ0FBQ3RDLGdCQUFnQjRELGNBQWM7UUFFMUQ5QyxRQUFRQyxHQUFHLENBQUMsMEJBQTBCZjtRQUV0QyxtQ0FBbUM7UUFDbkMsTUFBTXhCLGtEQUFXLENBQUNvRCxNQUFNLENBQUN4QixVQUFVWSxRQUFRO1FBRTNDbEMsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1lBQThDWSxTQUFTQTtRQUFRO0lBQ2pHLEVBQUUsT0FBT3FDLE9BQU87UUFDZHJCLFFBQVFxQixLQUFLLENBQUMsd0JBQXdCQSxRQUFRLDRCQUE0QjtRQUMxRXJELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztZQUF1Q2lELE9BQU9BLE1BQU16QixRQUFRO1FBQUcsSUFBSSxvQ0FBb0M7SUFDekk7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nvc21pYy1sZW5zLy4vcGFnZXMvYXBpL3VwbG9hZC5qcz81NTcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmb3JtaWRhYmxlIGZyb20gJ2Zvcm1pZGFibGUnO1xuaW1wb3J0IHNoYXJwIGZyb20gJ3NoYXJwJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcblxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgYXBpOiB7XG4gICAgYm9keVBhcnNlcjogZmFsc2UsXG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBtZXNzYWdlOiAnTWV0aG9kIE5vdCBBbGxvd2VkJyB9KTtcbiAgfVxuXG4gIC8vIEVuc3VyZSB0aGUgdGVtcG9yYXJ5IHVwbG9hZCBkaXJlY3RvcnkgZXhpc3RzXG4gIGNvbnN0IHRtcFVwbG9hZERpciA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAndG1wJyk7XG4gIGF3YWl0IGZzLnByb21pc2VzLm1rZGlyKHRtcFVwbG9hZERpciwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG5cbiAgY29uc3QgZm9ybSA9IGZvcm1pZGFibGUoe1xuICAgIHVwbG9hZERpcjogdG1wVXBsb2FkRGlyLFxuICAgIGtlZXBFeHRlbnNpb25zOiB0cnVlLFxuICAgIG1heEZpbGVTaXplOiAyMDAgKiAxMDI0ICogMTAyNCxcbiAgfSk7XG5cbiAgbGV0IGltYWdlSWQ7IC8vIERlY2xhcmUgaW1hZ2VJZCBvdXRzaWRlIHRyeSBibG9ja1xuICBsZXQgbmV3SW1hZ2VFbnRyeTsgLy8gRGVjbGFyZSBuZXdJbWFnZUVudHJ5IG91dHNpZGUgdHJ5IGJsb2NrXG4gIGxldCBpbWFnZXNGaWxlUGF0aDsgLy8gRGVjbGFyZSBpbWFnZXNGaWxlUGF0aCBvdXRzaWRlIHRyeSBibG9ja1xuXG4gIHRyeSB7XG4gICAgY29uc3QgW2ZpZWxkcywgZmlsZXNdID0gYXdhaXQgZm9ybS5wYXJzZShyZXEpO1xuICAgIGNvbnN0IGltYWdlRmlsZSA9IGZpbGVzLmltYWdlPy5bMF07XG4gICAgY29uc3QgdGl0bGUgPSBmaWVsZHMudGl0bGU/LlswXTtcbiAgICBjb25zdCBkZXNjcmlwdGlvbiA9IGZpZWxkcy5kZXNjcmlwdGlvbj8uWzBdO1xuXG4gICAgaWYgKCFpbWFnZUZpbGUgfHwgIXRpdGxlKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnSW1hZ2UgZmlsZSBhbmQgdGl0bGUgYXJlIHJlcXVpcmVkLicgfSk7XG4gICAgfVxuXG4gICAgaW1hZ2VJZCA9IERhdGUubm93KCkudG9TdHJpbmcoKTsgLy8gQXNzaWduIHZhbHVlXG4gICAgY29uc3Qgb3V0cHV0RGlyID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdwdWJsaWMnLCAndGlsZWQtaW1hZ2VzJywgaW1hZ2VJZCk7XG4gICAgY29uc3QgdGlsZVNvdXJjZVBhdGggPSBgL3RpbGVkLWltYWdlcy8ke2ltYWdlSWR9LyR7aW1hZ2VJZH0uZHppYDtcblxuICAgIC8vIEVuc3VyZSBvdXRwdXQgZGlyZWN0b3J5IGV4aXN0c1xuICAgIGF3YWl0IGZzLnByb21pc2VzLm1rZGlyKG91dHB1dERpciwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG5cbiAgICAvLyBQcm9jZXNzIGltYWdlIHRvIERaSSB0aWxlcyB1c2luZyBzaGFycFxuICAgIGNvbnN0IGR6aU91dHB1dFBhdGggPSBwYXRoLmpvaW4ob3V0cHV0RGlyLCBpbWFnZUlkICsgJy5kemknKTtcbiAgICBjb25zb2xlLmxvZygnUHJvY2Vzc2luZyBpbWFnZSB0byBEWkk6JywgaW1hZ2VGaWxlLmZpbGVwYXRoKTtcbiAgICBjb25zb2xlLmxvZygnRFpJIG91dHB1dCBkaXJlY3Rvcnk6Jywgb3V0cHV0RGlyKTtcbiAgICBjb25zb2xlLmxvZygnRFpJIG91dHB1dCBmaWxlIHBhdGg6JywgZHppT3V0cHV0UGF0aCk7XG5cbiAgICAvLyBWZXJpZnkgb3V0cHV0IGRpcmVjdG9yeSBjcmVhdGlvblxuICAgIGNvbnN0IG91dHB1dERpckV4aXN0cyA9IGF3YWl0IGZzLnByb21pc2VzLmFjY2VzcyhvdXRwdXREaXIsIGZzLmNvbnN0YW50cy5GX09LKVxuICAgICAgLnRoZW4oKCkgPT4gdHJ1ZSlcbiAgICAgIC5jYXRjaCgoKSA9PiBmYWxzZSk7XG4gICAgY29uc29sZS5sb2coYE91dHB1dCBkaXJlY3RvcnkgJHtvdXRwdXREaXJ9IGV4aXN0czogJHtvdXRwdXREaXJFeGlzdHN9YCk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIERlYnVnZ2luZyBzaGFycCBvdXRwdXQgLS0tXG4gICAgICBjb25zdCB0ZXN0T3V0cHV0UGF0aCA9IHBhdGguam9pbihvdXRwdXREaXIsICd0ZXN0X291dHB1dC5qcGcnKTtcbiAgICAgIGNvbnNvbGUubG9nKCdBdHRlbXB0aW5nIHRvIHdyaXRlIGEgdGVzdCBKUEcgdG86JywgdGVzdE91dHB1dFBhdGgpO1xuICAgICAgYXdhaXQgc2hhcnAoaW1hZ2VGaWxlLmZpbGVwYXRoKVxuICAgICAgICAucmVzaXplKDUwMCkgLy8gUmVzaXplIHRvIG1ha2UgaXQgc21hbGwgYW5kIHF1aWNrXG4gICAgICAgIC5qcGVnKHsgcXVhbGl0eTogODAgfSlcbiAgICAgICAgLnRvRmlsZSh0ZXN0T3V0cHV0UGF0aCk7XG4gICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IHdyb3RlIHRlc3QgSlBHLicpO1xuICAgICAgYXdhaXQgZnMucHJvbWlzZXMudW5saW5rKHRlc3RPdXRwdXRQYXRoKTsgLy8gQ2xlYW4gdXAgdGVzdCBmaWxlXG4gICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgdGVzdCBKUEcuJyk7XG4gICAgICAvLyAtLS0gRW5kIERlYnVnZ2luZyBzaGFycCBvdXRwdXQgLS0tXG5cbiAgICAgIGNvbnNvbGUubG9nKCdBdHRlbXB0aW5nIERaSSB0aWxpbmcgd2l0aCBzaGFycC4uLicpO1xuICAgICAgY29uc3Qgc2hhcnBPdXRwdXRNZXRhZGF0YSA9IGF3YWl0IHNoYXJwKGltYWdlRmlsZS5maWxlcGF0aClcbiAgICAgICAgLnRpbGUoe1xuICAgICAgICAgIHNpemU6IDI1NiwgLy8gVGlsZSBzaXplXG4gICAgICAgICAgbGF5b3V0OiAnZHonLCAvLyBEZWVwIFpvb20gZm9ybWF0XG4gICAgICAgICAgaWQ6IGltYWdlSWQsXG4gICAgICAgIH0pXG4gICAgICAgIC50b0ZpbGUocGF0aC5qb2luKG91dHB1dERpciwgaW1hZ2VJZCkpOyAvLyBDb3JyZWN0ZWQ6IHBhc3MgYmFzZSBwYXRoLCBzaGFycCBhZGRzIC5kemkgYW5kIF9maWxlc1xuICAgICAgY29uc29sZS5sb2coJ1NoYXJwIERaSSB0aWxpbmcgY29tcGxldGVkIHN1Y2Nlc3NmdWxseS4gT3V0cHV0IG1ldGFkYXRhOicsIHNoYXJwT3V0cHV0TWV0YWRhdGEpO1xuICAgIH0gY2F0Y2ggKHNoYXJwRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1NoYXJwIHByb2Nlc3NpbmcgZmFpbGVkOicsIHNoYXJwRXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB0aWxpbmcgZmFpbGVkOiAke3NoYXJwRXJyb3IubWVzc2FnZX1gKTsgLy8gUmUtdGhyb3cgdG8gYmUgY2F1Z2h0IGJ5IG1haW4gdHJ5L2NhdGNoXG4gICAgfVxuXG4gICAgLy8gLS0tIERlYnVnZ2luZyB3cml0ZSBwZXJtaXNzaW9ucyAtLS1cbiAgICBjb25zdCBkdW1teUZpbGVQYXRoID0gcGF0aC5qb2luKG91dHB1dERpciwgJ2R1bW15LnR4dCcpO1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBmcy5wcm9taXNlcy53cml0ZUZpbGUoZHVtbXlGaWxlUGF0aCwgJ1RoaXMgaXMgYSB0ZXN0IGZpbGUuJywgJ3V0Zi04Jyk7XG4gICAgICBjb25zb2xlLmxvZyhgU3VjY2Vzc2Z1bGx5IHdyb3RlIGR1bW15IGZpbGUgdG86ICR7ZHVtbXlGaWxlUGF0aH1gKTtcbiAgICAgIGF3YWl0IGZzLnByb21pc2VzLnVubGluayhkdW1teUZpbGVQYXRoKTsgLy8gQ2xlYW4gdXAgZHVtbXkgZmlsZVxuICAgICAgY29uc29sZS5sb2coYFN1Y2Nlc3NmdWxseSBkZWxldGVkIGR1bW15IGZpbGU6ICR7ZHVtbXlGaWxlUGF0aH1gKTtcbiAgICB9IGNhdGNoIChkdW1teVdyaXRlRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEZhaWxlZCB0byB3cml0ZSBkdW1teSBmaWxlIHRvICR7b3V0cHV0RGlyfTpgLCBkdW1teVdyaXRlRXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBQZXJtaXNzaW9ucyBlcnJvcjogQ2Fubm90IHdyaXRlIHRvIG91dHB1dCBkaXJlY3RvcnkuICR7ZHVtbXlXcml0ZUVycm9yLm1lc3NhZ2V9YCk7XG4gICAgfVxuICAgIC8vIC0tLSBFbmQgRGVidWdnaW5nIHdyaXRlIHBlcm1pc3Npb25zIC0tLVxuXG4gICAgY29uc29sZS5sb2coJ0NoZWNraW5nIGlmIERaSSBmaWxlIGV4aXN0cyBhZnRlciBzaGFycCBwcm9jZXNzaW5nLi4uJyk7XG4gICAgY29uc3QgZmlsZUV4aXN0cyA9IGF3YWl0IGZzLnByb21pc2VzLmFjY2VzcyhkemlPdXRwdXRQYXRoLCBmcy5jb25zdGFudHMuRl9PSylcbiAgICAgIC50aGVuKCgpID0+IHRydWUpXG4gICAgICAuY2F0Y2goKCkgPT4gZmFsc2UpO1xuICAgIGNvbnNvbGUubG9nKGBEWkkgZmlsZSAke2R6aU91dHB1dFBhdGh9IGV4aXN0czogJHtmaWxlRXhpc3RzfWApO1xuXG4gICAgLy8gVXBkYXRlIGRhdGEvaW1hZ2VzLmpzIChmb3IgcHJvdG90eXBlKVxuICAgIG5ld0ltYWdlRW50cnkgPSB7IC8vIEFzc2lnbiB2YWx1ZVxuICAgICAgaWQ6IGltYWdlSWQsXG4gICAgICB0aXRsZTogdGl0bGUsXG4gICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24gfHwgJycsXG4gICAgICB0aWxlU291cmNlOiB0aWxlU291cmNlUGF0aCxcbiAgICB9O1xuXG4gICAgY29uc29sZS5sb2coJ0RlZmluaW5nIGltYWdlc0ZpbGVQYXRoLi4uJyk7XG4gICAgaW1hZ2VzRmlsZVBhdGggPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2RhdGEnLCAnaW1hZ2VzLmpzJyk7XG4gICAgbGV0IGN1cnJlbnRDb250ZW50ID0gYXdhaXQgZnMucHJvbWlzZXMucmVhZEZpbGUoaW1hZ2VzRmlsZVBhdGgsICd1dGYtOCcpO1xuXG4gICAgLy8gRXh0cmFjdCB0aGUgYXJyYXkgc3RyaW5nIChldmVyeXRoaW5nIGJldHdlZW4gWyBhbmQgXSlcbiAgICBjb25zdCBhcnJheVN0YXJ0TWF0Y2ggPSBjdXJyZW50Q29udGVudC5tYXRjaCgvZXhwb3J0IGNvbnN0IHNwYWNlSW1hZ2VzID0gXFxbL1xuKTtcbiAgICBjb25zdCBhcnJheUVuZEluZGV4ID0gY3VycmVudENvbnRlbnQubGFzdEluZGV4T2YoJ10nKTtcblxuICAgIGlmICghYXJyYXlTdGFydE1hdGNoIHx8IGFycmF5RW5kSW5kZXggPT09IC0xKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBwYXJzZSBzcGFjZUltYWdlcyBhcnJheSBpbiBpbWFnZXMuanNcIik7XG4gICAgfVxuXG4gICAgY29uc3QgYXJyYXlTdHJpbmcgPSBjdXJyZW50Q29udGVudC5zdWJzdHJpbmcoYXJyYXlTdGFydE1hdGNoLmluZGV4ICsgYXJyYXlTdGFydE1hdGNoWzBdLmxlbmd0aCAtIDEsIGFycmF5RW5kSW5kZXggKyAxKTtcblxuICAgIC8vIFBhcnNlIHRoZSBhcnJheSBzdHJpbmcgaW50byBhIEphdmFTY3JpcHQgYXJyYXlcbiAgICBsZXQgY3VycmVudEltYWdlc0FycmF5O1xuICAgIHRyeSB7XG4gICAgICAgIGN1cnJlbnRJbWFnZXNBcnJheSA9IGV2YWwoYXJyYXlTdHJpbmcpOyAvLyBUaGlzIGlzIHJpc2t5IGluIHByb2R1Y3Rpb24sIGJ1dCBmaW5lIGZvciBwcm90b3R5cGVcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHBhcnNlIGltYWdlcy5qcyBhcnJheTogJHtlLm1lc3NhZ2V9LiBQbGVhc2UgZW5zdXJlIGRhdGEvaW1hZ2VzLmpzIGlzIHZhbGlkIEphdmFTY3JpcHQgYXJyYXkgc3ludGF4LmApO1xuICAgIH1cblxuICAgIC8vIEFkZCB0aGUgbmV3IGVudHJ5XG4gICAgY3VycmVudEltYWdlc0FycmF5LnB1c2gobmV3SW1hZ2VFbnRyeSk7XG5cbiAgICAvLyBTdHJpbmdpZnkgdGhlIGFycmF5IGJhY2sgdG8gYSBKYXZhU2NyaXB0IGFycmF5IHN0cmluZ1xuICAgIGNvbnN0IHVwZGF0ZWRBcnJheVN0cmluZyA9IEpTT04uc3RyaW5naWZ5KGN1cnJlbnRJbWFnZXNBcnJheSwgbnVsbCwgMilcbiAgICAgICAgLnJlcGxhY2UoL15bXFxbXS8sICdbXFxuICAnKSAvLyBBZGQgbmV3bGluZSBhbmQgaW5kZW50IGFmdGVyIG9wZW5pbmcgYnJhY2tldFxuICAgICAgICAucmVwbGFjZSgvW1xcXV0kLywgJ1xcbl0nKTsgLy8gQWRkIG5ld2xpbmUgYmVmb3JlIGNsb3NpbmcgYnJhY2tldFxuXG4gICAgLy8gUmVjb25zdHJ1Y3QgdGhlIGVudGlyZSBmaWxlIGNvbnRlbnRcbiAgICBjb25zdCBmaW5hbENvbnRlbnQgPSBgZXhwb3J0IGNvbnN0IHNwYWNlSW1hZ2VzID0gJHt1cGRhdGVkQXJyYXlTdHJpbmd9O1xcbmA7XG5cbiAgICBjb25zb2xlLmxvZygnQXR0ZW1wdGluZyB0byB3cml0ZSB0bzonLCBpbWFnZXNGaWxlUGF0aCk7XG4gICAgY29uc29sZS5sb2coJ0NvbnRlbnQgdG8gd3JpdGU6JywgZmluYWxDb250ZW50KTtcblxuICAgIGF3YWl0IGZzLnByb21pc2VzLndyaXRlRmlsZShpbWFnZXNGaWxlUGF0aCwgZmluYWxDb250ZW50LCAndXRmLTgnKTtcblxuICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgd3JvdGUgdG86JywgaW1hZ2VzRmlsZVBhdGgpO1xuXG4gICAgLy8gQ2xlYW4gdXAgdGVtcG9yYXJ5IHVwbG9hZGVkIGZpbGVcbiAgICBhd2FpdCBmcy5wcm9taXNlcy51bmxpbmsoaW1hZ2VGaWxlLmZpbGVwYXRoKTtcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogJ0ltYWdlIHVwbG9hZGVkIGFuZCBwcm9jZXNzZWQgc3VjY2Vzc2Z1bGx5IScsIGltYWdlSWQ6IGltYWdlSWQgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignVXBsb2FkIGVycm9yIGluIEFQSTonLCBlcnJvcik7IC8vIExvZyB0aGUgZnVsbCBlcnJvciBvYmplY3RcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdJbWFnZSB1cGxvYWQgYW5kIHByb2Nlc3NpbmcgZmFpbGVkLicsIGVycm9yOiBlcnJvci50b1N0cmluZygpIH0pOyAvLyBVc2UgZXJyb3IudG9TdHJpbmcoKSBmb3IgcmVzcG9uc2VcbiAgfVxufSJdLCJuYW1lcyI6WyJmb3JtaWRhYmxlIiwic2hhcnAiLCJwYXRoIiwiZnMiLCJjb25maWciLCJhcGkiLCJib2R5UGFyc2VyIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidG1wVXBsb2FkRGlyIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJwcm9taXNlcyIsIm1rZGlyIiwicmVjdXJzaXZlIiwiZm9ybSIsInVwbG9hZERpciIsImtlZXBFeHRlbnNpb25zIiwibWF4RmlsZVNpemUiLCJpbWFnZUlkIiwibmV3SW1hZ2VFbnRyeSIsImltYWdlc0ZpbGVQYXRoIiwiZmllbGRzIiwiZmlsZXMiLCJwYXJzZSIsImltYWdlRmlsZSIsImltYWdlIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIkRhdGUiLCJub3ciLCJ0b1N0cmluZyIsIm91dHB1dERpciIsInRpbGVTb3VyY2VQYXRoIiwiZHppT3V0cHV0UGF0aCIsImNvbnNvbGUiLCJsb2ciLCJmaWxlcGF0aCIsIm91dHB1dERpckV4aXN0cyIsImFjY2VzcyIsImNvbnN0YW50cyIsIkZfT0siLCJ0aGVuIiwiY2F0Y2giLCJ0ZXN0T3V0cHV0UGF0aCIsInJlc2l6ZSIsImpwZWciLCJxdWFsaXR5IiwidG9GaWxlIiwidW5saW5rIiwic2hhcnBPdXRwdXRNZXRhZGF0YSIsInRpbGUiLCJzaXplIiwibGF5b3V0IiwiaWQiLCJzaGFycEVycm9yIiwiZXJyb3IiLCJFcnJvciIsImR1bW15RmlsZVBhdGgiLCJ3cml0ZUZpbGUiLCJkdW1teVdyaXRlRXJyb3IiLCJmaWxlRXhpc3RzIiwidGlsZVNvdXJjZSIsImN1cnJlbnRDb250ZW50IiwicmVhZEZpbGUiLCJhcnJheVN0YXJ0TWF0Y2giLCJtYXRjaCIsImFycmF5RW5kSW5kZXgiLCJsYXN0SW5kZXhPZiIsImFycmF5U3RyaW5nIiwic3Vic3RyaW5nIiwiaW5kZXgiLCJsZW5ndGgiLCJjdXJyZW50SW1hZ2VzQXJyYXkiLCJldmFsIiwiZSIsInB1c2giLCJ1cGRhdGVkQXJyYXlTdHJpbmciLCJKU09OIiwic3RyaW5naWZ5IiwicmVwbGFjZSIsImZpbmFsQ29udGVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/upload.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fupload.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();